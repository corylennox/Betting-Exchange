MVP for investors (fewer requirements than V1):
- Technical requirements:
  - Get real-world bets available on the frontend
  - Clean up UI
  - Go through the TODOs for V1 and figure out which are required for MVP
- Cost estimations:
  - Legal fees search
    - applying for a license per state
    - the work entailed to apply to legally operate
  - Insurance for user payout
  - Geolocation verification fees
  - Identification verification fees
  - Do we have to generate tax forms for users? (e.g., 1099)
  - Regular Operational costs
    - AWS
    - Redis
- Determine a target state(s) to release in
- Pitch for where we're headed
  - Who is our target audience?
  - Do we start with a website or an ios app?
  - What is our edge over the competitors?
    - Market makers provide industry support
    - Better user experience:
      - Lower fees
      - Normal mode is intuitive to new bettors
      - Pro mode feels like investing

V1 (allowing friends and family to bet - user testing):
-Any remaining unfilled wager will become a limit order at the top of the book.
  If the bet is not filled, the order will rest on the book
  If the bet is filled, the user will be notified and the bet will be added to their My Bets page. 
  The user can then sell the bet at any time for the current market price. If the user sells the bet for a profit, 
  the profit will be added to their account balance.
-Show available liquidity on the betslip with tooltip
-If there's no available liquidity on the book, the user can specify a odds/price they want to buy the bet at (using arrows)
 and the bet will be added to the book as a limit order.

Cory
My Bets:
  - update tooltip message with link to FAQ page
  - get accurate data for cancelled bets
  - query automatically every 5 seconds for new bets
  - lazy loading for queries
- make app and dev environment compatible with Windows
- add .join() to all queries in backend
- make FAQ page
- register domain and aws under one of our names
- make sure users can't query the db after signing in to Auth0
- make admin panel (look into refinedev/refine on git)
- change dark/light theme button for mobile view?


Emerson
- Create tabs on the frontend within each sportpane for different categories.
- Install and setup morgan package
- Remove localhost from Auth0 redirect urls and from cors?

Nick
- Populate frontend (nfl sportpane) with real games from database
  - Server should generate a LeagueState object from database to represent all known information about NFL league
    - use the leagueStateFetcher in the controller folder to do this. You can find an example of this being done already in the code
  - Server should figure out which games to display on frontend
    - Only display games with today's date as a start time (will implement some smarter API in the future to figure out which games are not yet completed)
    - Sort games by scheduled start time (ascending)
  - Use existing graphql response object to send the games to the frontend when the frontend makes a request
    - Feel free to modify the response object if needed
  - Leave the code flexible for things that are likely to change (e.g., the order in which games are displayed)

Together
- Automate db backups with scripts
- Betslip submission errors (e.g. line on submitted bet differs from line on backend) should redirect user to MyBets page
- Add "cooldown" where bet in betslip is grayed out immediately after line change for a short period of time to prevent users from submitting bets at the old line
- Add toggle to accept line changes
- use populate server with real-world sport data on upcoming events - https://the-odds-api.com/
- Create a buttonId table with all the historic and active buttonIds and their associated betTypes.
- live update the status of bets in My Bets (e.g. you bet the over on total points scored and it will show something like [Live: 175 Bet: 226 ] )
- add betting groups so you can sweat bets with your friends
- verify our database is not sucseptible to sql injections
- change security groups on AWS to only allow traffic from proper IP addresses

- Have a mechanism to determine automatically when games complete and what the outcome of all of the bets on that game are and pay users out accordingly.

- have at least 1 market maker providing odds to the server. Create a "fake" market maker that pulls odds from the-odds-api and sends those odds to our server.

- make tailwind theme
- When we update the css, color scheme, and branding for the website, don't forget about updating the Auth0 branding in the user dashboard

- Change 2 scnearios with auth0 login: 1) have the users require a verification of email to sign up 2) make the error message more descriptive if someone tries to sign up with an already-signed-up email account

- Remove any db migrations that are dangerous (in case a revert is run)
- Create auth0 production environment, remove localhost from any production cors/auth0 allows URIs
- Check auth0 audience in client and server .envs to make sure we're using https not http for audience

- Switch all knex database tables from increments() to bigIncrements()

V1.X:
- Use HeadlessUI for sidebar, navbar, and bottomnavbar? (already using for active theme button)
- Rename buttonId in frontend & backend?
- use ints for all line/wager/payout JS numbers to avoid decimal floating point precision. Create hard coded constant values (scale vars) in the front end so front end can reference when converting to decimal
- Fix fetch requests being cancelled (chrome dev tools -> network tab) (caused by LINES_QUERY being fetched 2 more times than necessary) https://stackoverflow.com/questions/50294001/apollo-graphql-requests-are-canceled
- Allow auth0 redirect to redirct to any url on our site. make sure there are no security vulnerabilities with it.

- V2: Allow for prop bets. We need a way to parse SportRadar to determine outcome of prop bets (e.g., first player to 25 points in a game). Also, need a database model to model these prop bets efficiently. The knowledge of how to model it properly will hopefully come with experience...
- V2: Pro version of our app that allows users to have access to limit orders and selling on the outright betslip


Potential names:
- use https://namify.tech/ for some good inspirations
- Aight Bet
- Nouveau ("new" in french)
- Novus Sports Betting
- Pourtoi ("for you" in french)
- Eiffel
- What's the line
- Spons.io
- Contra (versus in latin)
- Contra (Latin), thanks nibs
- Forum
- Barter
- Courtside
- Jeffery
- Highline
- Hangtime
- MyBets
- Narrative (play on the word SportsBOOK)
- Novel (play on the word SportsBOOK)
- Native
- OpenBook (openbook.gg)
- Starter
